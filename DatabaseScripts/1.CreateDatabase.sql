/*
// Copyright (c) 2015-2017 Stichting Centrale Discotheek Rotterdam.
// 
// website: https://www.muziekweb.nl
// e-mail:  info@muziekweb.nl
//
// This code is under MIT licence, you can find the complete file here: 
// LICENSE.MIT
*/
CREATE DATABASE IF NOT EXISTS FINGERPRINT;

USE FINGERPRINT;



DROP TABLE IF EXISTS TITELNUMMERTRACK_ID;
CREATE TABLE TITELNUMMERTRACK_ID (
    TITELNUMMERTRACK_ID    INT NOT NULL AUTO_INCREMENT,
    GEWIJZIGD              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    TITELNUMMERTRACK       VARCHAR(20) NOT NULL,
    CATALOGUSCODE          VARCHAR(12) NOT NULL DEFAULT 'POP',
    UNIFORMETITELLINK      VARCHAR(12) NOT NULL DEFAULT '',
    DATUMRELEASE           DATETIME NOT NULL,
    AUDIOSOURCE            VARCHAR(12) NOT NULL,
    LOKATIE                VARCHAR(256) NOT NULL DEFAULT '',
    DURATIONINMS           BIGINT NOT NULL DEFAULT -1,
  PRIMARY KEY (TITELNUMMERTRACK_ID),
  UNIQUE KEY DK1_TITELNUMMERTRACK_ID (TITELNUMMERTRACK),
  KEY DK2_TITELNUMMERTRACK_ID (UNIFORMETITELLINK)
) ENGINE=INNODB DEFAULT CHARSET=UTF8;


DROP TABLE IF EXISTS FINGERID;
CREATE TABLE FINGERID (
    TITELNUMMERTRACK_ID    INT(11) NOT NULL ,
    GEWIJZIGD              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    DATUMTOEGEVOEGD        DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    SIGNATURE              LONGBLOB NOT NULL,
  PRIMARY KEY (TITELNUMMERTRACK_ID),
  KEY DK1_FINGERID (DATUMTOEGEVOEGD)
) ENGINE=INNODB DEFAULT CHARSET=UTF8;


DROP TABLE IF EXISTS SUBFINGERID;
CREATE TABLE SUBFINGERID (
    TITELNUMMERTRACK_ID    INT NOT NULL,
    GEWIJZIGD              TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    DATUMTOEGEVOEGD        DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    SIGNATURE              LONGBLOB NOT NULL,
  PRIMARY KEY (TITELNUMMERTRACK_ID),
  KEY DK1_SUBFINGERID (DATUMTOEGEVOEGD)
) ENGINE=INNODB DEFAULT CHARSET=UTF8;


DROP TABLE IF EXISTS RADIOCHANNEL;
CREATE TABLE RADIOCHANNEL (
	  RADIOCHANNEL_ID    INT NOT NULL AUTO_INCREMENT,
	  RADIONAME          VARCHAR(50) NOT NULL,
	  NAMECODE           VARCHAR(40) NOT NULL,
	  URL                VARCHAR(127) NOT NULL,
  PRIMARY KEY (RADIOCHANNEL_ID)
) ENGINE=INNODB DEFAULT CHARSET=UTF8;

INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('SkyRadio', 'SKYRADIO', 'http://www.skyradio.nl/player/skyradio.pls');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('Sky Radio 00''s Hits', 'SKY00', 'http://www.skyradio.nl/player/skyradio-00s-hits.pls');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('Sky Radio Hits', 'SKYHITS', 'http://www.skyradio.nl/player/skyradio-hits.pls');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('Sky Radio Lounge', 'SKYLOUNGE', 'http://www.skyradio.nl/player/skyradio-lounge.pls');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('Sky Radio Lovesongs', 'SKYLOVE', 'http://www.skyradio.nl/player/skyradio-lovesongs.pls');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('Sky Radio 90s', 'SKY90', 'http://www.skyradio.nl/player/skyradio-90s.pls');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('Sky Radio Christmas', 'SKYCHR', 'http://www.skyradio.nl/player/skyradio-christmas.pls');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('3FM', '3FM', 'http://icecast.omroep.nl/3fm-bb-mp3');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('Radio 538', 'RADIO538', 'http://vip-icecast.538.lw.triple-it.nl/RADIO538_MP3.m3u');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('Radio 4', 'RADIO4', 'http://icecast.omroep.nl/radio4-bb-mp3');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('Classic FM', 'CLASSICFM', 'http://www.classicfm.nl/player/classicfm.asx');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('Radio Veronica', 'VERONICA', 'http://www.radioveronica.nl/radioveronicaplayer/radioveronica.asx');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('Slam FM', 'SLAMFM', 'http://vip-icecast.538.lw.triple-it.nl/SLAMFM_MP3.m3u');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('Q-music', 'QMUSIC', 'http://icecast-qmusic.cdp.triple-it.nl/Qmusic_nl_nonstop_96.mp3.m3u');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('Q-music Foute Uur Non-Stop', 'QMUSICFOUT', 'http://icecast-qmusic.cdp.triple-it.nl/Qmusic_nl_fouteuur_96.mp3.m3u');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('100% NL', '100NL', 'http://www.100p.nl/media/audio/100pnl.pls');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('Juize', 'JUIZE', 'http://vip-icecast.538.lw.triple-it.nl/JUIZE_MP3.m3u');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('FunX', 'FUNX', 'http://icecast.omroep.nl/funx-bb-mp3.m3u');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('Arrow Caz', 'ARROWCAZ', 'http://www.arrow.nl/streams/Caz128kmp3.pls');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('Arrow Classic Rock', 'ARROWCROCK', 'http://www.garnierstreamingmedia.com/asx/streamerswitch.asp?stream=205');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('Radio 2', 'RADIO2', 'http://icecast.omroep.nl/radio2-bb-mp3');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('Radio 10', 'RADIO10', 'http://stream.radio10.nl/radio10.m3u');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('Radio 1', 'RADIO1', 'http://icecast.omroep.nl/radio1-bb-mp3.m3u');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('Radio Decibel', 'RADIODEC', 'http://www.decibel.nl/live/decibel.pls');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('Sublime FM', 'SUBLIMEFM', 'http://82.201.47.68/SublimeFM2.m3u');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('FreshFM', 'FRESHFM', 'http://streams.fresh.fm:8100/listen.pls');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('WILD FM', 'WILDFM', 'http://www.listenlive.eu/wildfm.m3u');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('Concertzender', 'CONCERTZENDER', 'https://www.concertzender.nl/streams/live');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('Sublime', 'SUBLIME', 'http://stream.sublimefm.nl/SublimeFM_mp3');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('KX Radio', 'KXRADIO', 'http://icecast.omroep.nl/3fm-serioustalent-mp3');
INSERT INTO RADIOCHANNEL (RADIONAME, NAMECODE, URL) VALUES('Studio Brussel', 'STUDIOBRUSSEL', 'http://mp3.streampower.be/stubru-high.mp3');


-- ------------------------------------------------------------------------------------------
-- Needed SP's
-- ------------------------------------------------------------------------------------------


DELIMITER $$

DROP PROCEDURE IF EXISTS RADIOCHANNEL_S$$

CREATE PROCEDURE RADIOCHANNEL_S (
    IN parNAMECODE    VARCHAR(40)
)
exit_proc:BEGIN
  SELECT *
  FROM   RADIOCHANNEL
  WHERE  NAMECODE = parNAMECODE;
 
END$$

DELIMITER ;


DELIMITER $$

DROP PROCEDURE IF EXISTS DELETEFINGERINDEX$$

CREATE PROCEDURE DELETEFINGERINDEX (
    IN parDATEGEWIJZIGD              DATE,
    IN parMAX_TITELNUMMERTRACK_ID    INT
)
exit_proc:BEGIN
  SELECT *
  FROM   TITELNUMMERTRACK_ID
  WHERE  TITELNUMMERTRACK_ID <= parMAX_TITELNUMMERTRACK_ID  
  AND    GEWIJZIGD > (parDATEGEWIJZIGD + INTERVAL 1 DAY)
  ORDER BY GEWIJZIGD;
END$$

DELIMITER ;


DELIMITER $$

DROP PROCEDURE IF EXISTS DELETESUBFINGERINDEX$$

CREATE PROCEDURE DELETESUBFINGERINDEX (
    IN parDATEGEWIJZIGD              DATE,
    IN parMAX_TITELNUMMERTRACK_ID    INT
)
exit_proc:BEGIN
  SELECT *
  FROM   TITELNUMMERTRACK_ID
  WHERE  TITELNUMMERTRACK_ID <= parMAX_TITELNUMMERTRACK_ID  
  AND    GEWIJZIGD > (parDATEGEWIJZIGD + INTERVAL 1 DAY)
  ORDER BY GEWIJZIGD;
END$$

DELIMITER ;


DELIMITER $$

DROP PROCEDURE IF EXISTS FINGERID_D$$

CREATE PROCEDURE FINGERID_D (
    IN parTITELNUMMERTRACK     VARCHAR(20)
)
exit_proc:BEGIN
-- YN 2015-08-18
  DECLARE _TITELNUMMERTRACK_ID    INT;
  
  SET _TITELNUMMERTRACK_ID = NULL;
  
  SELECT TITELNUMMERTRACK_ID
           INTO _TITELNUMMERTRACK_ID
  FROM   TITELNUMMERTRACK_ID
  WHERE  TITELNUMMERTRACK = parTITELNUMMERTRACK;

  IF _TITELNUMMERTRACK_ID IS NOT NULL THEN
    DELETE FROM FINGERID WHERE TITELNUMMERTRACK_ID = _TITELNUMMERTRACK_ID;
  END IF;
END$$

DELIMITER ;


DELIMITER $$

DROP PROCEDURE IF EXISTS FINGERID_IU$$

CREATE PROCEDURE FINGERID_IU (
    IN parTITELNUMMERTRACK     VARCHAR(20),
    IN parCATALOGUSCODE        VARCHAR(12),
    IN parDATUMRELEASE         DATETIME,
    IN parUNIFORMETITELLINK    VARCHAR(12),
    IN parAUDIOSOURCE          VARCHAR(12),
    IN parDURATIONINMS         BIGINT,
    IN parLOKATIE              VARCHAR(256),
    IN parSIGNATURE            LONGBLOB
)
exit_proc:BEGIN
-- YN 2015-08-21
-- FINGERID is een ACOUSTID fingerprint van de gehele track
--
  DECLARE _TITELNUMMERTRACK_ID    INT;

  SET _TITELNUMMERTRACK_ID = NULL;


  SELECT TITELNUMMERTRACK_ID
           INTO _TITELNUMMERTRACK_ID
  FROM   TITELNUMMERTRACK_ID
  WHERE  TITELNUMMERTRACK = parTITELNUMMERTRACK;

  IF _TITELNUMMERTRACK_ID IS NULL THEN

    INSERT INTO TITELNUMMERTRACK_ID (    
               TITELNUMMERTRACK,
               CATALOGUSCODE,
               UNIFORMETITELLINK,
               DATUMRELEASE,
               AUDIOSOURCE,
               LOKATIE,
               DURATIONINMS)
    VALUES(parTITELNUMMERTRACK,
           parCATALOGUSCODE,
           parUNIFORMETITELLINK,
           parDATUMRELEASE,
           parAUDIOSOURCE,
           parLOKATIE,
           parDURATIONINMS);
    
    SET _TITELNUMMERTRACK_ID = LAST_INSERT_ID();

  ELSE

    UPDATE TITELNUMMERTRACK_ID
      SET CATALOGUSCODE = IFNULL(parCATALOGUSCODE, CATALOGUSCODE),
          UNIFORMETITELLINK = IFNULL(parUNIFORMETITELLINK, UNIFORMETITELLINK),
          DATUMRELEASE = IFNULL(parDATUMRELEASE, DATUMRELEASE),
          AUDIOSOURCE = IFNULL(parAUDIOSOURCE, AUDIOSOURCE),
          LOKATIE = IFNULL(parLOKATIE, LOKATIE),
          DURATIONINMS = IFNULL(parDURATIONINMS, DURATIONINMS)
    WHERE TITELNUMMERTRACK_ID = _TITELNUMMERTRACK_ID;

  END IF;

  DELETE FROM FINGERID
  WHERE TITELNUMMERTRACK_ID = _TITELNUMMERTRACK_ID;

  INSERT INTO FINGERID (    
              TITELNUMMERTRACK_ID,
              SIGNATURE)
  VALUES(_TITELNUMMERTRACK_ID,
         parSIGNATURE); 
  SELECT _TITELNUMMERTRACK_ID AS TITELNUMMERTRACK_ID;
  
END$$

DELIMITER ;


DELIMITER $$

DROP PROCEDURE IF EXISTS SUBFINGERID_D$$

CREATE PROCEDURE SUBFINGERID_D (
    IN parTITELNUMMERTRACK     VARCHAR(20)
)
exit_proc:BEGIN
-- YN 2015-08-18
  DECLARE _TITELNUMMERTRACK_ID    INT;

  SET _TITELNUMMERTRACK_ID = NULL;

  
  SELECT TITELNUMMERTRACK_ID
           INTO _TITELNUMMERTRACK_ID
  FROM   TITELNUMMERTRACK_ID
  WHERE  TITELNUMMERTRACK = parTITELNUMMERTRACK;

  IF _TITELNUMMERTRACK_ID IS NOT NULL THEN
    DELETE FROM SUBFINGERID WHERE TITELNUMMERTRACK_ID = _TITELNUMMERTRACK_ID;
  END IF;

END$$

DELIMITER ;


DELIMITER $$

DROP PROCEDURE IF EXISTS SUBFINGERID_IU$$

CREATE PROCEDURE SUBFINGERID_IU (
    IN parTITELNUMMERTRACK     VARCHAR(20),
    IN parCATALOGUSCODE        VARCHAR(12),
    IN parDATUMRELEASE         DATETIME,
    IN parUNIFORMETITELLINK    VARCHAR(12),
    IN parAUDIOSOURCE          VARCHAR(12),
    IN parDURATIONINMS         BIGINT,
    IN parLOKATIE              VARCHAR(256),
    IN parSIGNATURE            LONGBLOB
)
exit_proc:BEGIN
-- YN 2015-08-21
-- 
  DECLARE _TITELNUMMERTRACK_ID    INT;

  SET _TITELNUMMERTRACK_ID = NULL;
  
  
  SELECT TITELNUMMERTRACK_ID
           INTO _TITELNUMMERTRACK_ID
  FROM   TITELNUMMERTRACK_ID
  WHERE  TITELNUMMERTRACK = parTITELNUMMERTRACK;

  IF _TITELNUMMERTRACK_ID IS NULL THEN

    INSERT INTO TITELNUMMERTRACK_ID (    
               TITELNUMMERTRACK,
               CATALOGUSCODE,
               UNIFORMETITELLINK,
               DATUMRELEASE,
               AUDIOSOURCE,
               LOKATIE,
               DURATIONINMS)
    VALUES(parTITELNUMMERTRACK,
           parCATALOGUSCODE,
           parUNIFORMETITELLINK,
           parDATUMRELEASE,
           parAUDIOSOURCE,
           parLOKATIE,
           parDURATIONINMS);
    
    SET _TITELNUMMERTRACK_ID = LAST_INSERT_ID();

  ELSE

    UPDATE TITELNUMMERTRACK_ID
      SET CATALOGUSCODE = IFNULL(parCATALOGUSCODE, CATALOGUSCODE),
          UNIFORMETITELLINK = IFNULL(parUNIFORMETITELLINK, UNIFORMETITELLINK),
          DATUMRELEASE = IFNULL(parDATUMRELEASE, DATUMRELEASE),
          AUDIOSOURCE = IFNULL(parAUDIOSOURCE, AUDIOSOURCE),
          LOKATIE = IFNULL(parLOKATIE, LOKATIE),
          DURATIONINMS = IFNULL(parDURATIONINMS, DURATIONINMS)
    WHERE TITELNUMMERTRACK_ID = _TITELNUMMERTRACK_ID;

  END IF;

  DELETE FROM SUBFINGERID
  WHERE TITELNUMMERTRACK_ID = _TITELNUMMERTRACK_ID;

  INSERT INTO SUBFINGERID (    
              TITELNUMMERTRACK_ID,
              SIGNATURE)
  VALUES(_TITELNUMMERTRACK_ID,
         parSIGNATURE); 
  SELECT _TITELNUMMERTRACK_ID AS TITELNUMMERTRACK_ID;

END$$

DELIMITER ;


DELIMITER $$

DROP PROCEDURE IF EXISTS TITELNUMMERTRACK_S$$

CREATE PROCEDURE TITELNUMMERTRACK_S (
    IN parTITELNUMMERTRACK_ID    BIGINT
)
exit_proc:BEGIN
-- YN 2015-08-18
  SELECT *
  FROM   TITELNUMMERTRACK_ID 
  WHERE  TITELNUMMERTRACK_ID = parTITELNUMMERTRACK_ID;
END$$

DELIMITER ;


DELIMITER $$

DROP PROCEDURE IF EXISTS TITELNUMMERTRACK_S2$$

CREATE PROCEDURE TITELNUMMERTRACK_S2 (
    IN parTITELNUMMERTRACK    VARCHAR(20)
)
exit_proc:BEGIN
-- YN 2015-08-18
  SELECT *
  FROM   TITELNUMMERTRACK_ID
  WHERE  TITELNUMMERTRACK = parTITELNUMMERTRACK;
END$$

DELIMITER ;


DELIMITER $$

DROP PROCEDURE IF EXISTS `UPDATEDFINGERINDEX`$$

CREATE PROCEDURE UPDATEDFINGERINDEX (
    IN parDATEGEWIJZIGD    DATE
)
exit_proc:BEGIN
  SELECT *
  FROM   TITELNUMMERTRACK_ID
  WHERE  GEWIJZIGD > (parDATEGEWIJZIGD + INTERVAL 1 DAY)
  ORDER BY GEWIJZIGD;
END$$

DELIMITER ;


DELIMITER $$

DROP PROCEDURE IF EXISTS UPDATEDSUBFINGERINDEX$$

CREATE PROCEDURE UPDATEDSUBFINGERINDEX (
    IN parDATEGEWIJZIGD    DATE
)
exit_proc:BEGIN
  SELECT *
  FROM   TITELNUMMERTRACK_ID
  WHERE  GEWIJZIGD > (parDATEGEWIJZIGD + INTERVAL 1 DAY)
  ORDER BY GEWIJZIGD;
END$$

DELIMITER ;

